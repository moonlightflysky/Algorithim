package math;

import java.util.ArrayList;
import java.util.Arrays;

public class Ksum {
	
	public ArrayList<ArrayList<Integer>> kSum(int[] num, int target, int k){
		
		ArrayList<ArrayList<Integer>> res = new ArrayList<ArrayList<Integer>>();
		
		if (num == null || num.length < k){
			return res;
		}
		
		Arrays.sort(num);
		ArrayList<Integer> item = new ArrayList<Integer>();
		
		sumHelper(num, 0, target, k, item, res);
		return res;
		
	}
	
	private void sumHelper(int[] num, int index, int target, int k, ArrayList<Integer> item, ArrayList<ArrayList<Integer>> res){
		
		int N = num.length;
		
		if (item.size() ==  k - 2){
			int lo = index;
			int hi = N - 1;
			while (lo < hi){
				int sum = num[lo] + num[hi];
				if (sum == target){
					item.add(num[lo]);
					item.add(num[hi]);
					res.add(new ArrayList<Integer>(item));
					item.remove(item.size() - 1);
					item.remove(item.size() - 1);
					lo++;
					hi--;
					
					while (lo < hi && num[lo] == num[lo - 1]){
						lo++;
					}
					
					while (lo < hi && num[hi] == num[hi + 1]){
						hi--;
					}
					
				}
				
				else if (sum < target){
					lo++;
				}
				
				else{
					hi--;
				}
				
			}
			
			return;
		}
		
		for (int i = index; i < N - k + 1 + item.size(); i++){
			
			if (i > index && num[i] == num[i - 1])	continue;
			
			item.add(num[i]);
			
			sumHelper(num, i + 1, target - num[i], k, item, res);
			
			item.remove(item.size() - 1);
			
		}
		
	}
	
	
	public static void main(String[] argv){
		int[] num = {1, 0, -1, 0, -2, 2};
		int k = 4;
		int target = 0;
		
		Ksum test = new Ksum();
		ArrayList<ArrayList<Integer>> res = test.kSum(num, target, k);
		System.out.println(res.toString());
		
	}

}
